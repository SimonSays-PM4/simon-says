[[{"l":"simon-says"}],[{"l":"Printer","p":["This directory contains source code important to the printer-system of SimonSays. The printer-system consists of four main parts:","printer-server: The on-site printer server. It acts as a bridge between the SimonSays printer-queue-server and the actual printer.","printer-queue-server: The server that manages the printer queue. It is responsible for managing the print jobs and sending them to the on-site printer server. In our case this is the monolithic backend server (see backend directory)","printer-api-lib: The API library for the printer-queue-server. It is intended to be used in frontends but also for printer-servers that need to communicate with the printer-queue-server","printer-user-interface: The user interface for the printer-queue-server. It is intended to be used by the staff to manage the printer queue."]},{"l":"Architecture"},{"l":"Build Printer Server Docker Image","p":["Go to this directory and run the following command:"]}],[{"l":"Printer api lib","p":["This package contains the API library for the printer-queue-server. It is intended to be used in frontends but also for backend services that need to communicate with the printer-queue-server like the on-site printer-server.","The api exposes a REST but also a socket.io interface for communication."]},{"l":"Getting Started with Printer API","p":["To add the printer-api-lib to your project, run the following command:","Since the printer-api-lib is not published to npm, the package is only available locally. The --link flag creates a symlink to the printer-api-lib package in your project's node_modules folder.","Because the printer-api-lib is written in TypeScript, you need to have a TypeScript compiler installed in your project."]}],[{"l":"Printer server","p":["On site printer server for the Simon Says project. Acts as a bridge between the SimonSays Printer-Queue-Server and the actual printer."]},{"l":"Getting Started with Printer Server","p":["Rename the .env.example file to .env and fill in the required environment variables."]},{"l":"Printer Server credentials","p":["Credentials for raspberry pi for development:","username: simon-says","password: 1234567890","test printer mac: 50:57:9c:d2:12:53"]}],[{"l":"SimonSays Backend"},{"l":"Swagger"},{"l":"Swagger UI","p":["http://localhost:8080/swagger-ui/index.html"]},{"l":"Api Docs","p":["http://localhost:8080/v3/api-docs"]},{"l":"Project structure","p":["folders: api: contains everything that the frontend needs. controllers, mappers and types config: contains all files for configuration. repository: contains everything for storing the data to the DB. service: contains all services which are handling the communication between repositories and the api."]},{"l":"Running the application","p":["To run the application you need to have a running mysql database. You can start the database and the app with the following command:"]}],[{"l":"SimonSays Front End","p":["The FrontEnd of the application is made in React / Typescript and is using vite to build and run.","Additionally the styling library Tailwind is being used."]},{"l":"Common Commands"},{"l":"Create API Endpoints","p":["The backend endpoints are stored in the doc.json file which can be used to generate the api calls in the front end using the following command:"]},{"l":"Build Application"},{"l":"Start Application Locally"}]]