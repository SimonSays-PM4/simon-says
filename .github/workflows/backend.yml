name: ci/cd backend pipeline

on:
  - push

env:
  # GENERAL
  BACKEND_DIRECTORY: SimonSaysBackend
  # JAVA env
  JAVA_VERSION: 17
  JAVA_DIST: corretto
  GRADLE_VERSION: 8.5
  # DOCKER env
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend
  # HELM env
  HELM_DIRECTORY: helm
  HELM_RELEASE_NAME: simonsays-backend
  # K8S env
  K8S_API: https://pm4.init-lab.ch/k8s/clusters/local
  K8S_NAMESPACE: simonsays-stage


jobs:
  gradle-build:
    runs-on: ubuntu-22.04
    steps:
      - name: gradle-build
        uses: ./.github/actions/gradle-build
  image-build:
    runs-on: ubuntu-22.04
    needs: [gradle-build]
    defaults:
      run:
        working-directory: SimonSaysBackend
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: download artifacts
        uses: actions/download-artifact@v4
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract metadata for docker image
        uses: docker/metadata-action@v5.5.1
        id: image-meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest
      - name: build and push docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: ./${{ env.BACKEND_DIRECTORY }}
          push: true
          tags: ${{ steps.image-meta.outputs.tags }}
          labels: ${{ steps.image-meta.outputs.labels }}
  test-helm-chart:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: setup helm
        uses: azure/setup-helm@v4.1.0
      - name: update helm dependencies
        run: helm dependency update ${{ env.HELM_DIRECTORY }}
      - name: helm lint
        run: helm lint ${{ env.HELM_DIRECTORY }}
      - name: helm package
        run: helm package ${{ env.HELM_DIRECTORY }}
  deploy-helm-ci:
    runs-on: ubuntu-22.04
    needs: [image-build]
    environment: staging
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: setup kubectl
        uses: azure/setup-kubectl@v4
      - name: configure kubectl
        run: |-
         kubectl config set-credentials sa --token=${{ secrets.K8S_TOKEN }}
         kubectl config set-cluster default --server=${{ env.K8S_API }}
         kubectl config set-context sa/default --user=sa --cluster=default --namespace=${{ env.K8S_NAMESPACE }}
         kubectl config use-context sa/default
      - name: upgrading helm release
        run: |-
          helm package ${{ env.HELM_DIRECTORY }}
          package=$(find . -name "${CHART_NAME}*.tgz")
          helm upgrade ${{ env.HELM_RELEASE_NAME }} $package  -f ${{ env.HELM_DIRECTORY }}/values-stage.yaml --install -n ${{ env.K8S_NAMESPACE }} --wait



