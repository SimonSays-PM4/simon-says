name: staging deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  # GENERAL
  BACKEND_DIRECTORY: backend
  FRONTEND_DIRECTORY: frontend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/frontend
  BACKEND_IMAGE_NAME: ${{ github.repository }}/backend
  # JAVA env
  JAVA_VERSION: 17
  JAVA_DIST: corretto
  # NPM env
  NODE_VERSION: 20
  # DOCKER env
  REGISTRY: ghcr.io
  # HELM env
  HELM_DIRECTORY: helm
  HELM_RELEASE_NAME: simonsays
  # K8S env
  K8S_API: https://pm4.init-lab.ch/k8s/clusters/local
  K8S_NAMESPACE: simonsays-stage


jobs:
  backend-test-and-build:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: gradle-build
        uses: ./.github/actions/gradle-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
      - name: image-build
        uses: ./.github/actions/image-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.BACKEND_IMAGE_NAME }}
          tags: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
  frontend-test-and-build:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: npm-build
        uses: ./.github/actions/npm-build
        with:
          working-directory: ${{ env.FRONTEND_DIRECTORY }}
          node-version: ${{ env.NODE_VERSION }}
      - name: image-build
        uses: ./.github/actions/image-build
        with:
          working-directory: ${{ env.FRONTEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.FRONTEND_IMAGE_NAME }}
          tags: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
  deploy-helm-ci:
    runs-on: ubuntu-22.04
    needs: [backend-test-and-build, frontend-test-and-build]
    environment: staging
    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: deploy
        uses: ./.github/actions/helm-release
        with:
          helm-directory: ${{ env.HELM_DIRECTORY }}
          k8s-token: ${{ secrets.K8S_TOKEN }}
          k8s-api: ${{ env.K8S_API }}
          k8s-namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.HELM_RELEASE_NAME }}
          helm-values-file: values-stage.yaml
          mysql-root-password: ${{ secrets.MYSQL_ROOT_PASSWORD_STAGING }}
          mysql-password: ${{ secrets.MYSQL_PASSWORD_STAGING }}

