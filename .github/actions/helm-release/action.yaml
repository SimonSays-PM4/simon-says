name: helm-release
description: packages and releases the helm chart
inputs:
  helm-directory:
    required: true
    description: directory of helm sources
  k8s-token:
    required: true
    description: k8s service account token
  k8s-api:
    required: true
    description: k8s api server
  k8s-namespace:
    required: true
    description: k8s namespace
  helm-release-name:
    required: true
    description: helm release name
  helm-values-file:
    required: true
    description: value file
  mysql-root-password:
    required: true
    description: mysql root password
  mysql-password:
    required: true
    description: mysql password

runs:
  using: "composite"
  steps:
    - name: setup kubectl
      uses: azure/setup-kubectl@v3
    - name: configure kubectl
      shell: bash
      run: |-
        kubectl config set-credentials sa --token=${{ inputs.k8s-token }}
        kubectl config set-cluster default --server=${{ inputs.k8s-api }}
        kubectl config set-context sa/default --user=sa --cluster=default --namespace=${{ inputs.k8s-namespace }}
        kubectl config use-context sa/default
    - name: upgrading helm release
      shell: bash
      run: |-
        helm dependency update ${{ inputs.helm-directory }}
        helm package ${{ inputs.helm-directory }}
        package=$(find . -name "${CHART_NAME}*.tgz")
        # print helm upgrade command for debugging
        echo helm upgrade ${{ inputs.helm-release-name }} $package  -f ${{ inputs.helm-directory }}/${{ inputs.helm-values-file }}  --set mysql.auth.rootPassword=${{inputs.mysql-root-password}}  --set mysql.auth.password=${{inputs.mysql-password}} --install -n ${{ inputs.k8s-namespace  }} --wait
        helm upgrade ${{ inputs.helm-release-name }} $package  -f ${{ inputs.helm-directory }}/${{ inputs.helm-values-file }}  --set mysql.auth.rootPassword=${{inputs.mysql-root-password}}  --set mysql.auth.password=${{inputs.mysql-password}} --install -n ${{ inputs.k8s-namespace  }} --wait